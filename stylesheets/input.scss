// breakpoints
$breakpoints: (
    small: 320px,
    medium: 650px,
    large: 1024px
);

// MIXINS // **************************
// Responsive breakpoint manager
@mixin respond-to($breakpoint) { 
    @if map-has-key($breakpoints, $breakpoint) {
      @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
        @content;
      }
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Please make sure it is defined in `$breakpoints` map.";
    }
  }
  
// ******************************

body {
  display: flex;
 flex-direction: column;
  width: 100%;
  height: 100%;
}

.links {
  display: flex;
  flex-direction: row;
  width: 100%;
  height: 100%;
  padding: 1rem;
  justify-content: space-around;
}

.content-wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

.kiss {
  display: flex;
  justify-content: flex-start;
  width: 100%;
  height: 100%;
}

.link-wrapper {
  display: flex;
  flex-direction: column;
  box-shadow: 2px 2px 2px 2px #8080803d;
  width: 20%;
  height: 100%;
  padding: 2%;
  margin-top: 1rem;
}

.flower {
  width: 100%;
  transform: rotate(35deg);
  -webkit-filter: invert(1);
  filter: invert(1);
}

.flower-container {
  overflow: hidden;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.white-screen {
  background-color: rgba(255,255,255,.9);
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: 10;
}

a {
  text-decoration: none;
}

.item {
  padding-top: .5rem;
}